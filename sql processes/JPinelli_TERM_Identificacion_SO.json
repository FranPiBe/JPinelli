{
  "paragraphs": [
    {
      "title": "Parque con TrÃ¡fico",
      "text": "%jdbc (hive)\n\n-- --> CEI mes \n-- drop table sandbox_datascientist.jfp_equipos_actualizables_02;\t\t\t\t\t\n-- create table sandbox_datascientist.jfp_equipos_actualizables_02 stored as orc as \t\t\t\t\t\n-- select a.*\t\t\t\t\t\n-- from trafico.sdr_dyn_cei a\t\t\t\t\t\n-- where a.fecha between 20230501 and 20230531 \t\t\t\t\t\n-- and base_hexa_cell_id like '72207%'\t\t\t\t\t\n-- and base_msisdn is not null\t\t\t\t\t\n-- ;\t\t\t\t\t\n\t\n-- drop table sandbox_datascientist.jfp_equipos_actualizables_03;\t\t\t\t\t\n-- create table sandbox_datascientist.jfp_equipos_actualizables_03 stored as orc as \t\t\t\t\t\n-- select substring (fecha,1, 6) as mes , base_msisdn as ani, avg(base_cei_score) as cei from sandbox_datascientist.jfp_equipos_actualizables_02\t\t\t\t\t\n-- group by substring (fecha,1, 6), base_msisdn\t\t\t\t\t\n-- ;\n\t\n\t\n-- --> trafico\t\t\t\t\t\n\n-- drop table sandbox_datascientist.jfp_equipos_actualizables_04;\t\t\t\t\t\n-- create table sandbox_datascientist.jfp_equipos_actualizables_04 as \t\t\t\t\t\n-- select \t\n-- substring(ani, 3, 10) as ani, \t\t\t\t\t\n-- SUM (b_tot_2g) B2G, \t\t\t\t\t\n-- SUM (b_tot_3g) B3G, \t\t\t\t\t\n-- SUM (b_tot_4g) B4G,\t\t\t\t\t\n-- SUM (b_tot_tot) BTOT,\t\t\t\t\t\n-- SUM (duration_2g) D_2G,\t\t\t\t\t\n-- SUM (duration_3g) D_3G,\t\t\t\t\t\n-- SUM (duration_4g) D_4G,\t\t\t\t\t\n-- SUM (duration_total) D_TOT\t\t\t\t\t\n-- from tableros.parque_terminales  \t\t\t\t\t\n-- where fecha between '2023-05-01' and '2023-05-31'\t\t\t\t\t\n-- AND ANI IS NOT NULL\t\t\t\t\t\n-- and b_tot_tot > 0\t\t\t\t\t\n-- group by substring(ani, 3, 10);\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n-- -> parque \t\t\t\t\t\n-- drop table sandbox_datascientist.jfp_equipos_actualizables_05;\t\t\t\t\t\n-- create table sandbox_datascientist.jfp_equipos_actualizables_05 \t\t\t\t\t\n-- as\t\t\t\t\t\n-- select \t\t\t\t\t\n-- a.valor_recurso_primario_cd as ani,\t\t\t\t\t\n-- a.tac_nr,\t\t\t\t\t\n-- a.tecnologia_tx as red_final,\t\t\t\t\t\n-- a.sim_lte_fl as sim_lte_final,\t\t\t\t\t\n-- a.tipo_cliente_de as segmento,\t\t\t\t\t\n-- case when a.tipo_oferta_de in ('PR_PPAL_AHORRO', 'Control') then 'Control'\t\t\t\t\t\n-- when a.tipo_oferta_de in ('PR_PPAL_CONTRATO', 'Postpago') then 'Pospago'\t\t\t\t\t\n-- when a.tipo_oferta_de in ('PortePagado', 'PR_PPAL_ACTIVA', 'PR_PPAL_EXPRESS', 'Prepaid', 'PRE') then 'Prepago'\t\t\t\t\t\n-- end as producto,\t\t\t\t\t\n-- b.cei as Cei_Ind_Experiencia_total_NR,\t\t\t\t\t\n-- a.periodo_nr as mes\t\t\t\t\t\n-- from access_data.AT_parque_m a\t\t\t\t\t\n-- join sandbox_datascientist.jfp_equipos_actualizables_03 b on a.valor_recurso_primario_cd=b.ani\t\t\t\t\t\n-- join sandbox_datascientist.jfp_equipos_actualizables_04 c on a.valor_recurso_primario_cd=c.ani\t\t\t\t\t\n-- where \t\t\t\t\t\n-- a.periodo_nr=202305\t\t\t\t\t\n-- and a.Suscripcion_CD NOT LIKE 'K%'\n-- and a.Linea_Negocio_CD = 'WRLS'\t\t\t\t\n-- ;\t\t\t\t\t\n\n\nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_06_1;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_06_1 stored as orc as\t\t\t\t\t\nselect msisdn ani, tac, fecha, OS_parser, ver_num_parser, orden from (\t\t\t\t\t\nselect a.msisdn,\t\t\t\t\t\ntrim(substr(imei,1,8)) as tac,\t\t\t\t\t\n        fecha,\n        b.version_parser_os OS_parser,\n        b.version_parser_num ver_num_parser,\n        row_number ()  over (partition by a.msisdn order by fecha desc) as orden\t\t\t\t\t\n    from trafico.huawei_dpi_consolidado a\n    join sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter2 b on a.user_agent=b.user_agent\n    where fecha between 20230501 and 20230504\t\t\t\t\t\n    and a.msisdn in (select ani from sandbox_datascientist.jfp_equipos_actualizables_05)\t\t\t\t\t\n    and substr(imsi,1,3)=722\n    and a.user_agent is not  null\n    and a.user_agent <>''\n    and a.user_agent <>'0'\n    and tethering_flag=0\n    )x where x.orden<=3;\n\n\nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_06_2;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_06_2 stored as orc as\t\t\t\t\t\nselect msisdn ani, tac, fecha, OS_parser, ver_num_parser, orden from (\t\t\t\t\t\nselect a.msisdn,\t\t\t\t\t\ntrim(substr(imei,1,8)) as tac,\t\t\t\t\t\n        fecha,\n        b.version_parser_os OS_parser,\n        b.version_parser_num ver_num_parser,\n        row_number ()  over (partition by a.msisdn order by fecha desc) as orden\t\t\t\t\t\n    from trafico.huawei_dpi_consolidado a\n    join sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter2 b on a.user_agent=b.user_agent\n    where fecha between 20230505 and 20230509\t\t\t\t\t\n    and a.msisdn in (select ani from sandbox_datascientist.jfp_equipos_actualizables_05)\t\t\t\t\t\n    and substr(imsi,1,3)=722\n    and a.user_agent is not  null\n    and a.user_agent <>''\n    and a.user_agent <>'0'\n    and tethering_flag=0\n\n)x where x.orden<=3;\n\nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_06_3;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_06_3 stored as orc as\t\t\t\t\t\nselect msisdn ani, tac, fecha, OS_parser, ver_num_parser, orden from (\t\t\t\t\t\nselect a.msisdn,\t\t\t\t\t\ntrim(substr(imei,1,8)) as tac,\t\t\t\t\t\n        fecha,\n        b.version_parser_os OS_parser,\n        b.version_parser_num ver_num_parser,\n        row_number ()  over (partition by a.msisdn order by fecha desc) as orden\t\t\t\t\t\n    from trafico.huawei_dpi_consolidado a\n    join sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter2 b on a.user_agent=b.user_agent\n    where fecha between 20230510 and 20230514\t\t\t\t\t\n    and a.msisdn in (select ani from sandbox_datascientist.jfp_equipos_actualizables_05)\t\t\t\t\t\n    and substr(imsi,1,3)=722\n    and a.user_agent is not  null\n    and a.user_agent <>''\n    and a.user_agent <>'0'\n    and tethering_flag=0\n)x where x.orden<=3;\n    \nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_06_4;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_06_4 stored as orc as\t\t\t\t\t\nselect msisdn ani, tac, fecha, OS_parser, ver_num_parser, orden from (\t\t\t\t\t\nselect a.msisdn,\t\t\t\t\t\ntrim(substr(imei,1,8)) as tac,\t\t\t\t\t\n        fecha,\n        b.version_parser_os OS_parser,\n        b.version_parser_num ver_num_parser,\n        row_number ()  over (partition by a.msisdn order by fecha desc) as orden\t\t\t\t\t\n    from trafico.huawei_dpi_consolidado a\n    join sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter2 b on a.user_agent=b.user_agent\n    where fecha between 20230515 and 20230519\t\t\t\t\t\n    and a.msisdn in (select ani from sandbox_datascientist.jfp_equipos_actualizables_05)\t\t\t\t\t\n    and substr(imsi,1,3)=722\n    and a.user_agent is not  null\n    and a.user_agent <>''\n    and a.user_agent <>'0'\n    and tethering_flag=0\n)x where x.orden<=3;\n\nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_06_5;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_06_5 stored as orc as\t\t\t\t\t\nselect msisdn ani, tac, fecha, OS_parser, ver_num_parser, orden from (\t\t\t\t\t\nselect a.msisdn,\t\t\t\t\t\ntrim(substr(imei,1,8)) as tac,\t\t\t\t\t\n        fecha,\n        b.version_parser_os OS_parser,\n        b.version_parser_num ver_num_parser,\n        row_number ()  over (partition by a.msisdn order by fecha desc) as orden\t\t\t\t\t\n    from trafico.huawei_dpi_consolidado a\n    join sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter2 b on a.user_agent=b.user_agent\n    where fecha between 20230520 and 20230524\t\t\t\t\t\n    and a.msisdn in (select ani from sandbox_datascientist.jfp_equipos_actualizables_05)\t\t\t\t\t\n    and substr(imsi,1,3)=722\n    and a.user_agent is not  null\n    and a.user_agent <>''\n    and a.user_agent <>'0'\n    and tethering_flag=0\n)x where x.orden<=3;\n\n\nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_06_6;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_06_6 stored as orc as\t\t\t\t\t\nselect msisdn ani, tac, fecha, OS_parser, ver_num_parser, orden from (\t\t\t\t\t\nselect a.msisdn,\t\t\t\t\t\ntrim(substr(imei,1,8)) as tac,\t\t\t\t\t\n        fecha,\n        b.version_parser_os OS_parser,\n        b.version_parser_num ver_num_parser,\n        row_number ()  over (partition by a.msisdn order by fecha desc) as orden\t\t\t\t\t\n    from trafico.huawei_dpi_consolidado a\n    join sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter2 b on a.user_agent=b.user_agent\n    where fecha between 20230525 and 20230529\t\t\t\t\t\n    and a.msisdn in (select ani from sandbox_datascientist.jfp_equipos_actualizables_05)\t\t\t\t\t\n    and substr(imsi,1,3)=722\n    and a.user_agent is not  null\n    and a.user_agent <>''\n    and a.user_agent <>'0'\n    and tethering_flag=0\n)x where x.orden<=3;\n\nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_06_7;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_06_7 stored as orc as\t\t\t\t\t\nselect msisdn ani, tac, fecha, OS_parser, ver_num_parser, orden from (\t\t\t\t\t\nselect a.msisdn,\t\t\t\t\t\ntrim(substr(imei,1,8)) as tac,\t\t\t\t\t\n        fecha,\n        b.version_parser_os OS_parser,\n        b.version_parser_num ver_num_parser,\n        row_number ()  over (partition by a.msisdn order by fecha desc) as orden\t\t\t\t\t\n    from trafico.huawei_dpi_consolidado a\n    join sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter2 b on a.user_agent=b.user_agent\n    where fecha between 20230529 and 20230531\t\t\t\t\t\n    and a.msisdn in (select ani from sandbox_datascientist.jfp_equipos_actualizables_05)\t\t\t\t\t\n    and substr(imsi,1,3)=722\n    and a.user_agent is not  null\n    and a.user_agent <>''\n    and a.user_agent <>'0'\n    and tethering_flag=0\n)x where x.orden<=3;\n    \n-- DROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_06_8;\t\t\t\t\t\n-- create table sandbox_datascientist.jfp_equipos_actualizables_06_8 stored as orc as\t\t\t\t\t\n-- select msisdn ani, tac, fecha, OS_parser, ver_num_parser, orden from (\t\t\t\t\t\n-- select a.msisdn,\t\t\t\t\t\n-- trim(substr(imei,1,8)) as tac,\t\t\t\t\t\n--         fecha,\n--         b.version_parser_os OS_parser,\n--         b.version_parser_num ver_num_parser,\n--         row_number ()  over (partition by a.msisdn order by fecha desc) as orden\t\t\t\t\t\n--     from trafico.huawei_dpi_consolidado a\n--     join sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter2 b on a.user_agent=b.user_agent\n--     where fecha between 20230525 and 20230531\t\t\t\t\t\n--     and a.msisdn in (select ani from sandbox_datascientist.jfp_equipos_actualizables_05)\t\t\t\t\t\n--     and substr(imsi,1,3)=722\t\t\t\t\t\n--     )x where x.orden<=3;\n\nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_09;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_09 stored as orc as\t\t\t\t\t\nselect * from(\t\t\t\t\t\nselect ani, tac, fecha,  OS_parser, ver_num_parser, \t\t\t\t\t\nrow_number ()  over (partition by ani order by fecha desc) as orden from(\nselect ani, tac, fecha,  OS_parser, ver_num_parser  from sandbox_datascientist.jfp_equipos_actualizables_06_1\nunion all\nselect ani, tac, fecha,  OS_parser, ver_num_parser  from sandbox_datascientist.jfp_equipos_actualizables_06_2\nunion all\nselect ani, tac, fecha,  OS_parser, ver_num_parser  from sandbox_datascientist.jfp_equipos_actualizables_06_3\nunion all\nselect ani, tac, fecha,  OS_parser, ver_num_parser  from sandbox_datascientist.jfp_equipos_actualizables_06_4\nunion all\nselect ani, tac, fecha,  OS_parser, ver_num_parser  from sandbox_datascientist.jfp_equipos_actualizables_06_5\nunion all\nselect ani, tac, fecha,  OS_parser, ver_num_parser  from sandbox_datascientist.jfp_equipos_actualizables_06_6\nunion all\nselect ani, tac, fecha,  OS_parser, ver_num_parser  from sandbox_datascientist.jfp_equipos_actualizables_06_7\n)x\t\t\t\t\t\n)y where orden<=3;\t\t\t\t\t\n\t\t\t\t\t\nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_010;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_010 stored as orc as\t\t\t\t\t\nselect ani, fecha, tac,\t\t\t\t\t\ncase when tac=tac_2 and tac=tac_3 then 1 else 0 end as fl_tac_valido,\t\t\t\t\t\ncase when OS_parser=OS_parser_2 and OS_parser=OS_parser_3 then 1 else 0 end as fl_OS_parser_valido,\t\ncase when ver_num_parser=ver_num_parser_2 and ver_num_parser=ver_num_parser_3 then 1 else 0 end as fl_ver_num_parser_valido,\t\t\t\t\t\nOS_parser,\nver_num_parser \nfrom(\t\t\t\t\t\nselect \t\t\t\t\t\na.ani,\t\t\t\t\t\na.fecha,\t\t\t\t\t\na.tac,\t\t\t\t\t\ncase when b.tac is null then a.tac else b.tac end as tac_2,\t\t\t\t\t\ncase when c.tac is null then a.tac else c.tac end as tac_3,\t\t\t\t\t\ncase when b.OS_parser is null then a.OS_parser else b.OS_parser end as OS_parser_2,\t\t\t\t\t\ncase when c.OS_parser is null then a.OS_parser else c.OS_parser end as OS_parser_3,\ncase when b.ver_num_parser is null then a.ver_num_parser else b.ver_num_parser end as ver_num_parser_2,\t\t\t\t\t\ncase when c.ver_num_parser is null then a.ver_num_parser else c.ver_num_parser end as ver_num_parser_3,\na.OS_parser,\na.ver_num_parser \nfrom sandbox_datascientist.jfp_equipos_actualizables_09 a\t\t\t\t\t\nleft join sandbox_datascientist.jfp_equipos_actualizables_09 b on a.ani=b.ani and b.orden=2\t\t\t\t\t\nleft join sandbox_datascientist.jfp_equipos_actualizables_09 c on a.ani=c.ani and c.orden=3\t\t\t\t\t\nwhere a.orden=1\t\t\t\t\t\n)x;\t\t\t\t\t\n\t\t\t\t\t\n\n-- -- No se para que hace esto creo que no lo necesito\t\t\t\t\t\n-- drop table sandbox_datascientist.jfp_equipos_actualizables_11;\t\t\t\t\t\n-- create table sandbox_datascientist.jfp_equipos_actualizables_11 as\t\t\t\t\t\n-- select a.*,\t\t\t\t\t\n-- regexp_replace(a.version_ok, ',', '')  as version_final\t\t\t\t\t\n-- from \t\t\t\t\t\n-- (\t\t\t\t\t\n-- select\t\t\t\t\t\n-- a.*,\t\t\t\t\t\n-- regexp_replace(version, ';', '')  as version_ok\t\t\t\t\t\n-- from sandbox_datascientist.jfp_equipos_actualizables_10 a\t\t\t\t\t\n-- )a\t\t\t\t\t\n-- ;\t\t\t\t\t\n\n-- Me quedo con los fl_version_valido\t\t\t\t\t\ndrop table sandbox_datascientist.jfp_equipos_actualizables_12;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_12 as\t\t\t\t\t\nselect ani, fecha, tac, OS_parser, ver_num_parser\nfrom sandbox_datascientist.jfp_equipos_actualizables_010\t\t\t\t\t\nwhere fl_ver_num_parser_valido=1 \t\t\t\t\t\n;\t\t\t\t\t\n\t\nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_13;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_13 stored as orc as\t\t\t\t\t\nselect \t\t\t\t\t\na.mes as mes_parque,\t\t\t\t\t\na.ani,\t\t\t\t\t\na.segmento,\t\t\t\t\t\na.producto,\t\t\t\t\t\na.cei_ind_experiencia_total_nr as cei_mes,\t\t\t\t\t\nb.fecha as fecha_so,\t\t\t\t\t\nb.tac,\nb.OS_parser version_final,\nb.ver_num_parser version_num\nfrom sandbox_datascientist.jfp_equipos_actualizables_05 a\t\t\t\t\t\njoin sandbox_datascientist.jfp_equipos_actualizables_12 b on a.ani=b.ani;\n\nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_14;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_14 stored as orc as\t\t\t\t\t\nselect * from (\t\t\t\t\t\nselect \t\t\t\t\t\na.*,\t\t\t\t\t\nregexp_replace(b.marca, ',', '')  as marca,\t\t\t\t\t\nregexp_replace(b.modelo, ',', '')  as modelo,\t\t\t\t\t\nregexp_replace(b.nombre_modelo, ',', '')  as nombre_modelo,\nrow_number ()  over (partition by a.ani order by a.ani) as orden\t\t\t\t\t\nfrom sandbox_datascientist.jfp_equipos_actualizables_13 a\t\t\t\t\t\nleft join access_data.at_tacs_gsma_m b on a.tac=b.tac_nr and b.periodo_nr=a.mes_parque\t\t\t\t\t\n\t\t\t\t\t\n)x where x.orden=1\t\t\t\t\t\n;\t\t\t\t\t\n\n\n\t\ndrop table sandbox_datascientist.jfp_equipos_actualizables_15;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_15\t\t\t\t\t\nas\t\t\t\t\t\nselect \t\t\t\t\t\na.*,\t\t\t\t\t\nd.version_final  as version_mayoritaria\t\t\t\t\t\nfrom sandbox_datascientist.jfp_equipos_actualizables_14 a\t\t\t\t\t\nleft join \t\t\t\t\t\n(\t\t\t\t\t\nselect z.modelo_final as modelo_final,\t\t\t\t\t\nz.version_final as version_final\t\t\t\t\t\nfrom\t\t\t\t\t\n(\t\t\t\t\t\nselect \t\t\t\t\t\ny.modelo_final,\t\t\t\t\t\ny.version_final,\t\t\t\t\t\nrow_number ()  over (partition by y.modelo_final order by y.Q desc) as rnk\t\t\t\t\t\nfrom\t\t\t\t\t\n(\t\t\t\t\t\nselect \t\t\t\t\t\nmodelo as modelo_final,\t\t\t\t\t\nversion_num as version_final,\t\t\t\t\t\ncount(*) Q\t\t\t\t\t\nfrom sandbox_datascientist.jfp_equipos_actualizables_14\t\t\t\t\t\ngroup by modelo,\t\t\t\t\t\nversion_num\t\t\t\t\t\n)y\t\t\t\t\t\n)z where z.rnk=1\t\t\t\t\t\n)d on d.modelo_final=a.modelo\t\t\t\t\t\n;\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\nDROP TABLE  if exists sandbox_datascientist.jfp_equipos_actualizables_16;\t\t\t\t\t\ncreate table sandbox_datascientist.jfp_equipos_actualizables_16 stored as orc as\t\t\t\t\t\nselect \t\t\t\t\t\nani,\t\t\t\t\t\nmes_parque,\t\t\t\t\t\nsegmento,\t\t\t\t\t\nproducto,\t\t\t\t\t\ncei_mes,\t\t\t\t\t\nfecha_so,\t\t\t\t\t\ntac,\t\t\t\t\t\nmarca,\t\t\t\t\t\nregexp_replace(modelo, ',', '') as modelo,\t\t\t\t\t\nnombre_modelo,\t\t\t\t\t\n--version_base_terminal,\t\t\t\t\t\n--version_tope_terminal,\t\t\t\t\t\n--gama,\t\t\t\t\t\n--fecha_primera_homologacion,\t\t\t\t\t\nversion_final,\t\t\t\t\t\ncast(version_num as string) version_num,\t\t\t\t\t\ncast(version_mayoritaria as string) version_mayoritaria,\t\t\t\t\t\nCASE WHEN marca LIKE '%Apple Inc%' THEN 1 ELSE 0 END AS fl_apple,\nCASE WHEN marca NOT LIKE '%Apple Inc%' \n        AND version_final NOT LIKE '%iOS%' \n        AND CAST(SUBSTRING_INDEX(version_num, '.', 1) AS INT) < 10 \n        AND version_num IS NOT NULL \n        AND CAST(SUBSTRING_INDEX(version_num, '.', 1) AS INT) < CAST(SUBSTRING_INDEX(version_mayoritaria, '.', 1) AS INT) \n     THEN 1 ELSE 0 END AS fl_actualizable_android,\nCASE WHEN marca NOT LIKE '%Apple Inc%' \n        AND version_final NOT LIKE '%iOS%' \n        AND version_num IS NOT NULL \n        AND CAST(SUBSTRING_INDEX(version_num, '.', 1) AS INT) < 5 \n     THEN 1 ELSE 0 END AS fl_cater_android,\nCASE WHEN marca LIKE '%Apple Inc%' \n        AND version_final LIKE '%iOS%' \n        AND CAST(SUBSTRING_INDEX(version_num, '.', 1) AS DECIMAL) < CAST(SUBSTRING_INDEX(version_mayoritaria, '.', 1) AS DECIMAL) \n     THEN 1 ELSE 0 END AS fl_actualizable_apple,\nCASE WHEN marca LIKE '%Apple Inc%' \n        AND version_final LIKE '%iOS%' \n        AND CAST(SUBSTRING_INDEX(version_num, '.', 2) AS FLOAT) < 14.6\n     THEN 1 ELSE 0 END AS fl_actualizable_apple_ultimo_update,\t\t\t\t\ncase when modelo in  ('Apple iPhone 5C (A1516)',\t\t\t\t\t\n'Apple iPhone 5C (A1526)',\t\t\t\t\t\n'Apple iPhone 5S (A118)',\t\t\t\t\t\n'Apple iPhone 5S (A1518)',\t\t\t\t\t\n'Apple iPhone 5S (A1528)',\t\t\t\t\t\n'Apple iPhone 5C (A1529)',\t\t\t\t\t\n'Apple iPhone 5C (A1456)',\t\t\t\t\t\n'Apple iPhone 5C (A1532)',\t\t\t\t\t\n'Apple iPhone 5C (A1507)',\t\t\t\t\t\n'Apple iPhone 5 (A1429)',\t\t\t\t\t\n'Apple iPhone 5S (A1530)',\t\t\t\t\t\n'Apple iPhone 5S (A1453)',\t\t\t\t\t\n'Apple iPhone 5S (A1533)',\t\t\t\t\t\n'Apple iPhone 5S (A1457)',\t\t\t\t\t\n'Apple iPhone 4S (A1387)',\t\t\t\t\t\n'Apple iPhone S (A1530)'\t\t\t\t\t\n) then 1 else 0 end as fl_cater_apple\t\t\t\t\t\nfrom sandbox_datascientist.jfp_equipos_actualizables_15;\t\t\t\t\t\n",
      "user": "jpinelli",
      "dateUpdated": "2024-03-28T20:35:04-0300",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "title": true,
        "results": {},
        "enabled": true,
        "fontSize": 9,
        "editorHide": false,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 10639066"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 11131707"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 11547940"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 11975532"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 11372460"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 10675672"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 9603910"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 21985833"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 7978360"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 6688053"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 6688053"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 6688053"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 6688053"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 6688053"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1656691187603_1104585450",
      "id": "20200826-100225_146188308",
      "dateCreated": "2022-07-01T12:59:47-0300",
      "dateStarted": "2023-07-20T15:49:28-0300",
      "dateFinished": "2023-07-20T16:20:10-0300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:54"
    },
    {
      "text": "%jdbc(hive)\n\nDROP TABLE  IF EXISTS sandbox_datascientist.jfp_equipos_actualizables_android_tmp;\nCREATE TABLE sandbox_datascientist.jfp_equipos_actualizables_android_tmp stored AS orc AS\nSELECT \n    a.*,\n    CASE \n        WHEN (CAST(SPLIT(a.version_num, '\\\\.')[0] AS DECIMAL) < 4 AND a.fl_actualizable_android = 1) THEN 'cater'\n        WHEN (CAST(SPLIT(a.version_num, '\\\\.')[0] AS DECIMAL) = 4 AND a.fl_actualizable_android = 1) THEN 'actualizacion'\n        WHEN a.fl_cater_android = 1 THEN 'cater'\n        ELSE 'actualizacion'\n    END AS fl_caso\nFROM sandbox_datascientist.jfp_equipos_actualizables_16 a\nWHERE a.fl_apple = 0\n    AND (a.fl_actualizable_android = 1 OR a.fl_cater_android = 1)\n    AND (CAST(SPLIT(a.version_mayoritaria, '\\\\.')[0] AS DECIMAL)) < 11.00\n    AND (\n        (CAST(SPLIT(a.version_num, '\\\\.')[0] AS DECIMAL) < 8 AND \n        CAST(version_mayoritaria AS DECIMAL) - CAST(SPLIT(a.version_num, '\\\\.')[0] AS DECIMAL) <= 3)\n        OR CAST(SPLIT(a.version_num, '\\\\.')[0] AS DECIMAL) >= 8\n    );\n\n\n\nDROP TABLE  IF EXISTS sandbox_datascientist.jfp_equipos_actualizables_apple_tmp;\nCREATE TABLE sandbox_datascientist.jfp_equipos_actualizables_apple_tmp stored AS orc AS\nSELECT \na.*,\nCASE\nWHEN fl_cater_apple=1 THEN 'cater'\nWHEN fl_actualizable_apple_ultimo_update=1 THEN 'actualizacion'\nend AS fl_caso\nFROM sandbox_datascientist.jfp_equipos_actualizables_16 a\nWHERE fl_apple=1 AND (fl_actualizable_apple_ultimo_update=1 OR fl_cater_apple=1)\n;\n\n\nDROP TABLE  IF EXISTS sandbox_datascientist.jfp_equipos_actualizables_parque_tmp;\nCREATE TABLE sandbox_datascientist.jfp_equipos_actualizables_parque_tmp stored AS orc AS\n\nSELECT a.*, \nCASE \n    WHEN a.fl_apple = 1 AND a.fl_cater_apple = 1 THEN 'Obsoleto'\n    WHEN a.fl_apple = 1 AND a.version_final LIKE '%iOS%' AND CAST(SPLIT(a.version_num, '\\\\.')[0] AS INT) < 10 THEN 'Obsoleto'\n    WHEN a.fl_apple = 1 AND a.version_final LIKE '%iOS%' AND CAST(SPLIT(a.version_num, '\\\\.')[0] AS DECIMAL) >= 13.40 THEN 'Maximo:(>=8 Android o >=13.4 Apple)'\n    WHEN a.fl_apple = 1 AND a.version_final LIKE '%iOS%' AND CAST(SPLIT(a.version_num, '\\\\.')[0] AS DECIMAL) < 13.40 AND CAST(SPLIT(a.version_num, '\\\\.')[0] AS INT) >= 10 THEN 'Medio: (Entre 5 y 7 Android / Entre 10 y 13.4 Apple)'\n    WHEN a.fl_apple = 0 AND CAST(SPLIT(a.version_num, '\\\\.')[0] AS INT) < 5 THEN 'Obsoleto'\n    WHEN a.fl_apple = 0 AND a.fl_cater_android = 1 THEN 'Obsoleto'\n    WHEN a.fl_apple = 0 AND a.version_final NOT LIKE '%iOS%' AND CAST(SPLIT(a.version_num, '\\\\.')[0] AS INT) >= 8 THEN 'Maximo:(>=8 Android o >=13.4 Apple)'\n    WHEN a.fl_apple = 0 AND a.version_final NOT LIKE '%iOS%' AND CAST(SPLIT(a.version_num, '\\\\.')[0] AS INT) < 8 AND CAST(SPLIT(a.version_num, '\\\\.')[0] AS INT) >= 5 THEN 'Medio: (Entre 5 y 7 Android / Entre 10 y 13.4 Apple)'\nEND AS fl_grupo_so,\nCASE \n    WHEN a.fl_apple = 1 THEN b.fl_caso\n    WHEN a.fl_apple = 0 THEN c.fl_caso\n    ELSE 'sin_accion'\nEND AS fl_grupo_accion\nFROM sandbox_datascientist.jfp_equipos_actualizables_16 a\nLEFT JOIN sandbox_datascientist.jfp_equipos_actualizables_apple_tmp b ON a.ani = b.ani AND a.mes_parque = b.mes_parque\nLEFT JOIN sandbox_datascientist.jfp_equipos_actualizables_android_tmp c ON a.ani = c.ani AND a.mes_parque = c.mes_parque\n;\n\ndrop table sandbox_datascientist.jfp_equipos_actualizables_parser_final;\ncreate TABLE sandbox_datascientist.jfp_equipos_actualizables_parser_final stored as orc as\nSELECT \nani,\nsegmento,\nproducto,\ncei_mes,\nfecha_so,\ntac,\nmarca,\nmodelo,\nnombre_modelo,\nversion_final,\nversion_num,\nversion_mayoritaria,\nfl_apple,\nfl_actualizable_android,\nfl_cater_android,\nfl_actualizable_apple,\nfl_actualizable_apple_ultimo_update,\nfl_cater_apple,\nfl_grupo_so,\nfl_grupo_accion,\nmes_parque\nFROM sandbox_datascientist.jfp_equipos_actualizables_parque_tmp;",
      "user": "jpinelli",
      "dateUpdated": "2023-07-20T18:27:16-0300",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 109891"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 35416"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 6688053"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 6688053"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1688580630708_57551989",
      "id": "20230705-151030_209241340",
      "dateCreated": "2023-07-05T15:10:30-0300",
      "dateStarted": "2023-07-20T18:27:16-0300",
      "dateFinished": "2023-07-20T18:29:39-0300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:55"
    },
    {
      "text": "%jdbc(hive)\n\ndrop table sandbox_datascientist.jfp_parque_202306_nuevo_n_0; --CAMBIAR POR EL MES-1\ncreate table sandbox_datascientist.jfp_parque_202306_nuevo_n_0 stored as orc as --CAMBIAR POR EL MES-1\n\n \n\nselect\n\n \n\n \n\ncoalesce(a.mes_mau, a.mes_abt ) as periodo, \nfl_grupo_so,\ntraf_50mb,\na.mes_abt,\na.mes_mau,\ncase\nwhen app=1 then  concat(a.producto,' con app')\nwhen app=0 and  a.producto in ('Prepago','PRE','Prepaid','PortePagado') and  rec_30= 1 and traf_50mb= 1 and fl_grupo_so in ('Maximo:(>=8 Android o >=13.4 Apple)','Medio: (Entre 5 y 7 Android / Entre 10 y 13.4 Apple)') then concat(a.producto,' Compatible')\nwhen app=0 and  a.producto in ('Postpago','Full','Control') and traf_50mb= 1 and fl_grupo_so in ('Maximo:(>=8 Android o >=13.4 Apple)','Medio: (Entre 5 y 7 Android / Entre 10 y 13.4 Apple)') then concat(a.producto,' Compatible')\n--when app=0 and  fl_grupo_so = 'Obsoleto' then concat(a.producto,' NoCompatible')\nwhen app=0 and   a.producto in ('Prepago','PRE','Prepaid','PortePagado') and  rec_30= 0 then 'Prepago NoRecargador'\nwhen app=0 and  fl_grupo_so = 'Obsoleto' or  traf_50mb= 0 then concat(a.producto,' NoCompatible')\nelse concat(a.producto,' NA') end as Marca_compatible,\ncount(distinct a.ani) as q_anis\nfrom\n\n \n\n(select coalesce(a.ani,b.ani) as ani,\nSUSCRIPCION_ID, b.producto as producto, \na.mes_mau , \nb.mes_abt,\ncoalesce(a.app,0) as app, \ncoalesce(b.traf_50mb,0) as traf_50mb, coalesce(b.rec_30,0) as rec_30,\nb.imei_nr\nfrom\n\n \n\n(select z.*  from \n(select  user_properties_ani as ani, substring(data_date,0,6) as mes_mau, rank() OVER (PARTITION BY user_properties_ani ORDER BY data_date DESC) as rank , 1 as app from  \naccess_data.fb_mv_app_eventos_completa where data_date between 20230501 and 20230531\nand event_params_firebase_event_origin not in ('auto','fcm')\nand user_properties_ani is not null\n) z where z.rank=1 )a\n\nfull outer join\n\n \n\n(select Periodo_NR as mes_abt, valor_recurso_primario_cd as ani, SUSCRIPCION_ID, \n(case when Tipo_oferta_de in ('PRE','Prepaid' , 'PortePagado') then 'Prepago' \n      when Tipo_oferta_de='Postpago' then 'Full' else Tipo_oferta_de end) as Producto,\nTraf_Datos_Total_Mb_CA,Recarga_Total_MO, \n(case when Traf_Datos_Total_Mb_CA >=50 then 1 else 0 end) as traf_50mb, \n(case when Recarga_Negocio_CA >0 then 1 else 0 end) as rec_30,imei_nr\nfrom access_data.abt_suscripcion_movil_m where TRIM(Producto_Principal_DE) = 'Movil' \nAND COALESCE(Oper_Baja_FL,0) = 0\nAND Periodo_NR = 202305\nand estado_suscripcion_activo_fl=1) b\n\n \n\non a.ani=b.ani\nand a.mes_mau=b.mes_abt\n\n \n\n)a\n\n \n\nleft join \n(select * from tableros.equipos_actualizables where mes_parque= 202305 ) c\n\n \n\non  a.ani=c.ani\nand a.mes_abt=c.mes_parque\n\n \n\ngroup by \ncoalesce(a.mes_mau, a.mes_abt ),\nfl_grupo_so,\ntraf_50mb,\na.mes_abt,\na.mes_mau,\ncase\nwhen app=1 then  concat (a.producto,' con app')\nwhen app=0 and  a.producto in ('Prepago','PRE','Prepaid','PortePagado') and  rec_30= 1 and traf_50mb= 1  and fl_grupo_so in ('Maximo:(>=8 Android o >=13.4 Apple)','Medio: (Entre 5 y 7 Android / Entre 10 y 13.4 Apple)') then concat(a.producto,' Compatible')\nwhen app=0 and  a.producto in ('Postpago','Full','Control') and traf_50mb= 1 and fl_grupo_so in ('Maximo:(>=8 Android o >=13.4 Apple)','Medio: (Entre 5 y 7 Android / Entre 10 y 13.4 Apple)') then concat(a.producto,' Compatible')\nwhen app=0 and   a.producto in ('Prepago','PRE','Prepaid','PortePagado') and  rec_30= 0 then 'Prepago NoRecargador'\nwhen app=0 and  fl_grupo_so = 'Obsoleto' or  traf_50mb= 0 then concat(a.producto,' NoCompatible')\nelse concat(a.producto,' NA') end;\n",
      "user": "jpinelli",
      "dateUpdated": "2023-07-20T18:39:48-0300",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 61"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1688571271280_1018411830",
      "id": "20230705-123431_1316114829",
      "dateCreated": "2023-07-05T12:34:31-0300",
      "dateStarted": "2023-07-20T18:39:50-0300",
      "dateFinished": "2023-07-20T18:42:42-0300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:56"
    },
    {
      "text": "%jdbc(hive)\n\ndrop table sandbox_datascientist.jfp_parque_202306_nuevo_n_1; --CAMBIAR POR EL MES-1\ncreate table sandbox_datascientist.jfp_parque_202306_nuevo_n_1 stored as orc as --CAMBIAR POR EL MES-1\n\n \n\nselect\n\n \n\n \n\ncoalesce(a.mes_mau, a.mes_abt ) as periodo, \nfl_grupo_so,\ntraf_50mb,\na.mes_abt,\na.mes_mau,\ncase\nwhen app=1 then  concat(a.producto,' con app')\nwhen app=0 and  a.producto in ('Prepago','PRE','Prepaid','PortePagado') and  rec_30= 1 and traf_50mb= 1 and fl_grupo_so in ('Maximo:(>=8 Android o >=13.4 Apple)','Medio: (Entre 5 y 7 Android / Entre 10 y 13.4 Apple)') then concat(a.producto,' Compatible')\nwhen app=0 and  a.producto in ('Postpago','Full','Control') and traf_50mb= 1 and fl_grupo_so in ('Maximo:(>=8 Android o >=13.4 Apple)','Medio: (Entre 5 y 7 Android / Entre 10 y 13.4 Apple)') then concat(a.producto,' Compatible')\n--when app=0 and  fl_grupo_so = 'Obsoleto' then concat(a.producto,' NoCompatible')\nwhen app=0 and   a.producto in ('Prepago','PRE','Prepaid','PortePagado') and  rec_30= 0 then 'Prepago NoRecargador'\nwhen app=0 and  fl_grupo_so = 'Obsoleto' or  traf_50mb= 0 then concat(a.producto,' NoCompatible')\nelse concat(a.producto,' NA') end as Marca_compatible,\ncount(distinct a.ani) as q_anis\nfrom\n\n \n\n(select coalesce(a.ani,b.ani) as ani,\nSUSCRIPCION_ID, b.producto as producto, \na.mes_mau , \nb.mes_abt,\ncoalesce(a.app,0) as app, \ncoalesce(b.traf_50mb,0) as traf_50mb, coalesce(b.rec_30,0) as rec_30,\nb.imei_nr\nfrom\n\n \n\n(select z.*  from \n(select  user_properties_ani as ani, substring(data_date,0,6) as mes_mau, rank() OVER (PARTITION BY user_properties_ani ORDER BY data_date DESC) as rank , 1 as app from  \naccess_data.fb_mv_app_eventos_completa where data_date between 20230501 and 20230531\nand event_params_firebase_event_origin not in ('auto','fcm')\nand user_properties_ani is not null\n) z where z.rank=1 )a\n\nfull outer join\n\n \n\n(select Periodo_NR as mes_abt, valor_recurso_primario_cd as ani, SUSCRIPCION_ID, \n(case when Tipo_oferta_de in ('PRE','Prepaid' , 'PortePagado') then 'Prepago' \n      when Tipo_oferta_de='Postpago' then 'Full' else Tipo_oferta_de end) as Producto,\nTraf_Datos_Total_Mb_CA,Recarga_Total_MO, \n(case when Traf_Datos_Total_Mb_CA >=50 then 1 else 0 end) as traf_50mb, \n(case when Recarga_Negocio_CA >0 then 1 else 0 end) as rec_30,imei_nr\nfrom access_data.abt_suscripcion_movil_m where TRIM(Producto_Principal_DE) = 'Movil' \nAND COALESCE(Oper_Baja_FL,0) = 0\nAND Periodo_NR = 202305\nand estado_suscripcion_activo_fl=1) b\n\n \n\non a.ani=b.ani\nand a.mes_mau=b.mes_abt\n\n \n\n)a\n\n \n\nleft join \n(select * from sandbox_datascientist.jfp_equipos_actualizables_parser_final where mes_parque= 202305 ) c\n\n \n\non  a.ani=c.ani\nand a.mes_abt=c.mes_parque\n\n \n\ngroup by \ncoalesce(a.mes_mau, a.mes_abt ),\nfl_grupo_so,\ntraf_50mb,\na.mes_abt,\na.mes_mau,\ncase\nwhen app=1 then  concat (a.producto,' con app')\nwhen app=0 and  a.producto in ('Prepago','PRE','Prepaid','PortePagado') and  rec_30= 1 and traf_50mb= 1  and fl_grupo_so in ('Maximo:(>=8 Android o >=13.4 Apple)','Medio: (Entre 5 y 7 Android / Entre 10 y 13.4 Apple)') then concat(a.producto,' Compatible')\nwhen app=0 and  a.producto in ('Postpago','Full','Control') and traf_50mb= 1 and fl_grupo_so in ('Maximo:(>=8 Android o >=13.4 Apple)','Medio: (Entre 5 y 7 Android / Entre 10 y 13.4 Apple)') then concat(a.producto,' Compatible')\nwhen app=0 and   a.producto in ('Prepago','PRE','Prepaid','PortePagado') and  rec_30= 0 then 'Prepago NoRecargador'\nwhen app=0 and  fl_grupo_so = 'Obsoleto' or  traf_50mb= 0 then concat(a.producto,' NoCompatible')\nelse concat(a.producto,' NA') end;\n",
      "user": "jpinelli",
      "dateUpdated": "2023-07-20T18:40:09-0300",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 68"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1689616535472_-1617664314",
      "id": "20230717-145535_37845971",
      "dateCreated": "2023-07-17T14:55:35-0300",
      "dateStarted": "2023-07-20T18:40:22-0300",
      "dateFinished": "2023-07-20T18:42:45-0300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:57"
    },
    {
      "text": "%jdbc (hive)\n--drop table if exists\tsandbox.jg_equipos_actualizables_01\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_02\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_03\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_04\t;\n--drop table if exists\tsandbox.jg_equipos_actualizables_05\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_06\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_07\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_08\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_09\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_10\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_11\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_12\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_13\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_14\t;\ndrop table if exists\tsandbox.jg_equipos_actualizables_15\t;",
      "user": "jpinelli",
      "dateUpdated": "2022-07-01T12:59:48-0300",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : -1"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1656691188000_766906060",
      "id": "20200907-161741_1285030814",
      "dateCreated": "2022-07-01T12:59:48-0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:58"
    },
    {
      "text": "%jdbc(hive)\ndrop table sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter_grouped;\ncreate table sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter_grouped stored as orc as\n\nSELECT user_agent, version FROM sandbox_datascientist.hab_equipos_actualizables_user_agent_inter1 a group by user_agent,version;\n",
      "user": "jpinelli",
      "dateUpdated": "2023-05-15T12:58:28-0300",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1656691188047_-1016304855",
      "id": "20210806-103818_920932885",
      "dateCreated": "2022-07-01T12:59:48-0300",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:59"
    },
    {
      "text": "%spark.pyspark\n\nfrom user_agents import parse\nfrom pyspark.sql.functions import udf\nfrom pyspark.sql.types import BooleanType\n\n# Definir funciÃ³n tipo_dispositivo\ndef categorize_device(user_agent):\n    try:\n        ua = parse(user_agent)\n        if ua.is_mobile:\n            return 'Movil'\n        elif ua.is_tablet:\n            return 'Tablet'\n        elif ua.is_pc:\n            return 'PC'\n        elif ua.is_bot:\n            return 'Bot'\n        elif ua.is_touch_capable:\n            return 'Dispositivo con pantalla tactil'\n        else:\n            return 'Otros'\n    except:\n        return 'Error al parsear el user agent'\n\n\ndef parse_user_agent(user_agent):\n    try:\n        ua = parse(user_agent)\n        return ua.os.family\n    except:\n        return None\n\n# Definir funciÃ³n de parsing\ndef parse_user_agent2(user_agent):\n    try:\n        ua = parse(user_agent)\n        return ua.os.version_string\n    except:\n        return None\n\n# Registrar funciÃ³n de parsing como UDF\nparse_user_agent_udf = udf(parse_user_agent)\nparse_user_agent_udf2 = udf(parse_user_agent2)\ncategorize_device_udf = udf(categorize_device)\n\n# Crear DataFrame a partir de la tabla\ndf3 = spark.sql(\"SELECT user_agent from trafico.huawei_dpi_consolidado where fecha between 20230501 and 20230531 group by user_agent\")\n\n# # Agregar columna 'version_parser_OS' y 'version_parser_num' que contiene la versiÃ³n del sistema operativo extraÃ­da del user_agent\ndf3 = df3.withColumn('version_parser_OS', parse_user_agent_udf(df3.user_agent))\ndf3 = df3.withColumn('version_parser_num', parse_user_agent_udf2(df3.user_agent))\n# # Agregar columna 'es_celu' que contiene un booleano indicando si el dispositivo es un mÃ³vil\ndf3 = df3.withColumn('dev_type', categorize_device_udf(df3.user_agent))\n\n# Mostrar DataFrame resultante\ndf3.show()\n\n# Guardar en una tabla de hadoop en formato ORC\ndf3.write.format(\"orc\").mode(\"overwrite\").saveAsTable(\"sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter\")\n\n",
      "user": "jpinelli",
      "dateUpdated": "2023-07-06T11:37:18-0300",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+-----------------+------------------+--------+\n|          user_agent|version_parser_OS|version_parser_num|dev_type|\n+--------------------+-----------------+------------------+--------+\n|Mozilla/5.0 (X11;...|            Linux|                  |      PC|\n|Android 9; es_US;...|          Android|                 9|  Tablet|\n|A/7.1.1/samsung/S...|            Other|                  |   Otros|\n|A/8.1.0/samsung/S...|            Other|                  |   Otros|\n|A/9/samsung/SM-J4...|            Other|                  |   Otros|\n|Mozilla/5.0 (Linu...|          Android|                11|  Tablet|\n|Mozilla/5.0 (Linu...|          Android|                12|  Tablet|\n|A/7.1.1/samsung/S...|            Other|                  |   Otros|\n|Mozilla/5.0 (Linu...|          Android|                10|   Movil|\n|Mozilla/5.0 (Linu...|          Android|                12|  Tablet|\n|Mozilla/5.0 (Linu...|          Android|                 9|  Tablet|\n|Dalvik/2.1.0 (Lin...|          Android|                 9|  Tablet|\n|Mozilla/5.0 (Linu...|          Android|             7.1.1|   Movil|\n|a/com.kwai.video/...|            Other|                  |   Otros|\n|Mozilla/5.0 (Linu...|          Android|                13|   Movil|\n|a/com.kwai.video/...|            Other|                  |   Otros|\n|A/10/TCL/5102B/ms...|            Other|                  |   Otros|\n|Mozilla/5.0 (Linu...|          Android|             8.1.0|  Tablet|\n|Mozilla/5.0 (Linu...|          Android|               7.0|  Tablet|\n|Dalvik/2.1.0 (Lin...|          Android|                10|  Tablet|\n+--------------------+-----------------+------------------+--------+\nonly showing top 20 rows"
          },
          {
            "type": "HTML",
            "data": "<hr/>Spark Application Id: application_1670280341149_1705190<br/>Spark WebUI: <a href=\"http://aphdpmnp03.tmoviles.com.ar:8088/proxy/application_1670280341149_1705190/\">http://aphdpmnp03.tmoviles.com.ar:8088/proxy/application_1670280341149_1705190/</a>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1684166308881_-1024876013",
      "id": "20230515-125828_1350670632",
      "dateCreated": "2023-05-15T12:58:28-0300",
      "dateStarted": "2023-07-06T11:37:19-0300",
      "dateFinished": "2023-07-06T12:08:02-0300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:60"
    },
    {
      "text": "%jdbc(hive)\nselect * from sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter a\nwhere version_parser_num is not null and version_parser_num !='' and version_parser_os = 'iOS'\nand CAST(SUBSTRING_INDEX(version_parser_num, '.', 1) AS int) < 17\nunion all\nselect * from sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter a\nwhere version_parser_num is not null and version_parser_num !='' and version_parser_os = 'Android'\nand CAST(SUBSTRING_INDEX(version_parser_num, '.', 1) AS int) < 15\n-- union all\n-- select * from sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter a\n-- where version_parser_os not in ('Android','iOS') \n;",
      "user": "jpinelli",
      "dateUpdated": "2023-07-20T11:52:41-0300",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "user_agent": "string",
                      "version_parser_os": "string",
                      "version_parser_num": "string",
                      "dev_type": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "user_agent\tversion_parser_os\tversion_parser_num\tdev_type\nmakeupDemo/4.1 (iPhone; iOS 16.3.1; Scale/2.00)\tiOS\t16.3.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 15_7_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 SP-engine/2.70.0\tiOS\t15.7.5\tMovil\nGlobalPax/7.3.73 (iPhone; iOS 15.7.5; Scale/3.00)\tiOS\t15.7.5\tMovil\nMakeup/6.2.1 (iPhone; iOS 16.3.1; Scale/3.00)\tiOS\t16.3.1\tMovil\nzhong he zai xian/3.5.1 (iPhone; iOS 16.4.1; Scale/3.00)\tiOS\t16.4.1\tMovil\nserver-bag [iPhone OS,12.4.2,16G114,iPhone7,2]\tiOS\t12.4.2\tMovil\nNeteaseMusic 8.9.80/3954 (iPhone; iOS 16.4.1; zh-Hans_AR)\tiOS\t16.4.1\tMovil\nGoddessEra/4 CFNetwork/1335.0.3.1 Darwin/21.6.0\tiOS\t15.6\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/\tiOS\t7.0\tMovil\n365Scores/5.8.13(iOS/16.4.1 iPhone13,2) DeviceID: 0A822B4F-7868-44D0-882A-362BA5B84696\tiOS\t16.4.1\tMovil\nHeadBall%202/2 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\nESPN/6411 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\ngamed/5.10.19.4.7.16.5.4.2 (iPhone4,1; 9.3.2; 13F69; GameKit-367.308)\tiOS\t9.3.2\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 15_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148;QQSportsV3/com.ten\tiOS\t15.5\tMovil\nSkate2/16 CFNetwork/1335.0.3.1 Darwin/21.6.0\tiOS\t15.6\tMovil\nQuark/6.2.5 (iPhone; iOS 16.3.1; Scale/2.00)\tiOS\t16.3.1\tMovil\nMoovit/128205 CFNetwork/978.0.7 Darwin/18.7.0\tiOS\t12.4\tMovil\nMapas/2684.33.11.30.2 CFNetwork/1329 Darwin/21.3.0\tiOS\t15.3\tMovil\nWeChat/8.0.37.32 CFNetwork/1331.0.7 Darwin/21.4.0\tiOS\t15.4\tMovil\nCabifyRider/8.86.0 (iPhone; iOS 15.1.1; Scale/3.00)\tiOS\t15.1.1\tMovil\n365Scores/5.8.13(iOS/16.0.2 iPhone12,8) DeviceID: E80F3D55-E7FE-4AD9-A746-822CC02FE457\tiOS\t16.0.2\tMovil\nwidgetExtension/2.13.0.0 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\n365Scores/5.8.13(iOS/16.4.1 iPhone12,1) DeviceID: 51D0BD5D-BC65-41E1-ACB1-6B05A549AD8C\tiOS\t16.4.1\tMovil\nserver-bag [iPhone OS,14.0.1,18A393,iPhone11,2]\tiOS\t14.0.1\tMovil\nNanoSmart/1.0.1 (com.nanocomm.Nanocomm; build:216; iOS 15.7.5) Alamofire/4.7.3\tiOS\t15.7.5\tDispositivo con pantalla tactil\nGlobalPax/7.3.72 (iPhone; iOS 14.7.1; Scale/2.00)\tiOS\t14.7.1\tMovil\nkugou/11.3.3 (iPhone; iOS 16.4.1; Scale/3.00)\tiOS\t16.4.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 16_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Mobile/12A365 QQMusic/12.1.0 Mski\tiOS\t16.3\tMovil\nD%C3%B3lar%20Simple/23 CFNetwork/1329 Darwin/21.3.0\tiOS\t15.3\tMovil\nGlobalPax/7.3.76 (iPhone; iOS 16.1; Scale/2.00)\tiOS\t16.1\tMovil\nShadowTrackerExtra/2.6.0 (iPhone; iOS 16.3.1; Scale/2.00)\tiOS\t16.3.1\tMovil\nMoovit/127794 CFNetwork/978.0.7 Darwin/18.7.0\tiOS\t12.4\tMovil\nStarMaker/802304191125 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\nPluto%20TV/48 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\nRoam/8.2.8 (iPhone; iOS 16.5; Scale/3.00)\tiOS\t16.5\tMovil\n365Scores/5.8.13(iOS/16.4.1 iPhone12,5) DeviceID: 262C4BDB-8B27-4377-82DF-CE6C2652FFE1\tiOS\t16.4.1\tMovil\nMozilla/5.0 (iPhone; CPU OS 16_3_1 like Mac OS X; en-US)\tiOS\t16.3.1\tMovil\nCabifyRider/8.80.1 (iPhone; iOS 16.1.1; Scale/3.00)\tiOS\t16.1.1\tMovil\nhowear_DELO/4.04.28 (iPhone; iOS 16.4.1; Scale/3.00)\tiOS\t16.4.1\tMovil\nIdleCinemaEmpire/2.02.05 (iPhone; iOS 16.1.1; Scale/3.00)\tiOS\t16.1.1\tMovil\n365Scores/5.8.13(iOS/16.4.1 iPhone14,4) DeviceID: 89FCAFBD-B584-460B-9786-155E10A853B5\tiOS\t16.4.1\tMovil\nDJDuoduo/3800 CFNetwork/1240.0.4 Darwin/20.6.0\tiOS\t14.8\tMovil\nDuRecord/1.7.7 CFNetwork/1335.0.3.1 Darwin/21.6.0\tiOS\t15.6\tMovil\ntingAPNSerEx/9.1.30 (iPhone; iOS 16.4.1; Scale/3.00)\tiOS\t16.4.1\tMovil\nGlobalPax/7.3.68 (iPhone; iOS 15.7.2; Scale/2.00)\tiOS\t15.7.2\tMovil\nPou/257 CFNetwork/1335.0.3.1 Darwin/21.6.0\tiOS\t15.6\tMovil\nSniper3D/21343 CFNetwork/1329 Darwin/21.3.0\tiOS\t15.3\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/105.0.5195.129 Mobile/15E1\tiOS\t16.0\tMovil\nAppleCoreMedia/1.0.0.18F72 (iPhone; U; CPU OS 14_6 like Mac OS X; es_es)\tiOS\t14.6\tMovil\n\\345\\215\\216\\344\\272\\272\\345\\244\\264\\346\\235\\241 2.7.3 rv:376 (iPhone; iOS 15.7.1; zh-Hans_US)\tiOS\t15.7.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 16_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148/wkthajkxkvmrveef\tiOS\t16.4.1\tMovil\nGlobalPax/7.2.84 (iPhone; iOS 15.2; Scale/2.00)\tiOS\t15.2\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.1044.1006 Mobile Safar\tiOS\t11.0\tMovil\nMediaiOS/4.0.7 (iPhone; iOS 9.3.5; Scale/2.00)\tiOS\t9.3.5\tMovil\nserver-bag [iPhone OS,12.5.2,16H30,iPhone6,1]\tiOS\t12.5.2\tMovil\nGearManager/009 CFNetwork/1197 Darwin/20.0.0\tiOS\t14\tMovil\nWoodoku/1772 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\nKwai/501570 CFNetwork/978.0.7 Darwin/18.7.0\tiOS\t12.4\tMovil\nX-HERO/1 CFNetwork/1335.0.3.1 Darwin/21.6.0\tiOS\t15.6\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 14_1 like Mac OS X) AppleWebKit/545.10.13 (KHTML, like Gecko) Version/12.0.17 Mobile/FNUQX3 S\tiOS\t14.1\tMovil\nShoot Bubble/1.5.4 (iPhone; iOS 15.3.1; Scale/3.00)\tiOS\t15.3.1\tMovil\nWorldIPTV/3.3 (iPhone; iOS 16.0; Scale/3.00)\tiOS\t16.0\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 13_1 like Mac OS X) AppleWebKit/600.5.22 (KHTML, like Gecko) Version/14.4 Mobile/G5FMVV Safar\tiOS\t13.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 13_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/93.0.4577.39 Mobile/15E148\tiOS\t13.3\tMovil\ntingAPNSerEx/9.1.24 (iPhone; iOS 16.4.1; Scale/3.00)\tiOS\t16.4.1\tMovil\n365Scores/5.8.13(iOS/16.3.1 iPhone12,1) DeviceID: 363B4B77-1A8B-44F6-A0CE-0D36B99E6B39\tiOS\t16.3.1\tMovil\n365Scores/5.8.13(iOS/16.2 iPhone12,5) DeviceID: E2EA6AE6-E691-4AA5-9EC8-5026A1CE2B1E\tiOS\t16.2\tMovil\n365Scores/5.8.13(iOS/16.4.1 iPhone14,5) DeviceID: 9B644E10-BD5B-45B8-ACDC-0172C68D09FE\tiOS\t16.4.1\tMovil\n365Scores/5.8.13(iOS/16.3.1 iPhone13,4) DeviceID: FA699F97-1771-455B-96F9-DEEAD6450743\tiOS\t16.3.1\tMovil\n1RM/1.3.5 CFNetwork/1335.0.3.1 Darwin/21.6.0\tiOS\t15.6\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 15_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 Instagram 244.0.\tiOS\t15.6.1\tMovil\n365Scores/5.8.13(iOS/16.1 iPhone14,5) DeviceID: DA5006D9-D3AE-4537-9C47-590286F8F541\tiOS\t16.1\tMovil\nGold%20Run/6.4.0.2482 CFNetwork/978.0.7 Darwin/18.7.0\tiOS\t12.4\tMovil\n365Scores/5.8.13(iOS/16.3.1 iPhone12,1) DeviceID: 7809BA3F-BE73-4BEC-8C12-02929CA077A8\tiOS\t16.3.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 12_1_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Mobile/12A365 QQMusic/9.15.0 Ms\tiOS\t12.1.2\tMovil\nRocketCars/1.1.2.27377 CFNetwork/758.5.3 Darwin/15.6.0\tiOS\t9.3.5\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 13_7 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 Instagram 276.1.0.\tiOS\t13.7\tMovil\nSUMO%20Tandil/45095 CFNetwork/1240.0.4 Darwin/20.5.0\tiOS\t14.6\tMovil\nYYReader/7242020 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\n365Scores/5.8.14(iOS/16.5 iPhone15,2) DeviceID: 14B89989-CF79-401C-8C1D-37D17608E141\tiOS\t16.5\tMovil\n365Scores/5.8.14(iOS/16.4.1 iPhone14,3) DeviceID: FD48D22F-D37B-4238-A951-E903474A1061\tiOS\t16.4.1\tMovil\nios.zepeto_global/3.27.000 (ios; U; iOS 16.4.1; es-AR; occ-AR; iPhone 13);ZEPETO\tiOS\t16.4.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.83 Mobile Safari/5\tiOS\t8.0\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 13_2 like Mac OS X) AppleWebKit/600.4.21 (KHTML, like Gecko) Version/12.4.74 Mobile/1BARHL Sa\tiOS\t13.2\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 15_1 like Mac OS X) AppleWebKit/578.15.8 (KHTML, like Gecko) Version/14.4 Mobile/H184OK Safar\tiOS\t15.1\tMovil\nserver-bag [iPhone OS,13.7,17H35,iPhone12,8]\tiOS\t13.7\tMovil\nBabyGenerator/1.19 (com.dbai.BabyGenerator; build:1; iOS 15.7.1) Alamofire/5.6.4\tiOS\t15.7.1\tDispositivo con pantalla tactil\nMostaza/2.1.2 (com.mostaza; build:45; iOS 14.8.0) Alamofire/2.1.2\tiOS\t14.8.0\tDispositivo con pantalla tactil\nMarble%20Clash/0.73 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\n365Scores/5.8.14(iOS/16.4.1 iPhone11,8) DeviceID: 47D492E7-47E9-4697-A8CC-2D5B1611ED54\tiOS\t16.4.1\tMovil\n365Scores/5.8.14(iOS/16.3.1 iPhone14,2) DeviceID: 156FDBC5-ADDB-44E4-A49E-0841B5DF6BE1\tiOS\t16.3.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 14_2 like Mac OS X) AppleWebKit/600.4.12 (KHTML, like Gecko) Version/13.0 Mobile/S7T74X Safar\tiOS\t14.2\tMovil\n365Scores/6482 CFNetwork/1220.1 Darwin/20.3.0\tiOS\t14.4\tMovil\nStickerProfiling/1.5.0 (com.ghostwording.StickerProfiling; build:2022.12.13.1049; iOS 16.1.1) Alamofire/1.5.0\tiOS\t16.1.1\tDispositivo con pantalla tactil\npunball/2 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\n365Scores/5.8.13(iOS/16.4.1 iPhone12,1) DeviceID: B392AEBC-E160-42B9-913E-919B6FBA1166\tiOS\t16.4.1\tMovil\nUBIANoteService/202304191808 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 16_0_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) GSA/236.0.484392333 Mobile/20A\tiOS\t16.0.2\tMovil\ncolsecor_sensa-phone/300631 CFNetwork/1335.0.3.1 Darwin/21.6.0\tiOS\t15.6\tMovil\nWeverse/2.8.1 (co.benx.weverse; build:2.8.1.10; iOS 16.4.1) Alamofire/5.6.4\tiOS\t16.4.1\tDispositivo con pantalla tactil\nIHG-Mobile-App/5.20.0.3559 (iOS; 16.3.1; iPhone14,3)\tiOS\t16.3.1\tMovil\nB612/10.5.15.1 CFNetwork/887 Darwin/17.0.0\tiOS\t11.0\tMovil\nserver-bag [iPhone OS,15.0.2,19A404,iPhone11,8]\tiOS\t15.0.2\tMovil\n365Scores/5.8.14(iOS/16.5 iPhone15,2) DeviceID: CFAD61C4-0FA7-4A35-AE6C-5A73F7DFEE00\tiOS\t16.5\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 16_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 (4739650048)\tiOS\t16.4.1\tMovil\n365Scores/5.8.13(iOS/16.3.1 iPhone14,5) DeviceID: D6E374F0-803E-484E-A036-E94249A0FB68\tiOS\t16.3.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 15_1_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 QuantcastSDK/iOS\tiOS\t15.1.1\tMovil\nperfectcoffee/1.4.7.3670 CFNetwork/1240.0.4 Darwin/20.5.0\tiOS\t14.6\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 16_1_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 UCBrowser/15.4.3\tiOS\t16.1.1\tMovil\nAutohome/11.45.0 (iPhone; iOS 14.8.1; Scale/3.00)\tiOS\t14.8.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/600.6.20 (KHTML, like Gecko) Version/13.2 Mobile/IW9YKD Safar\tiOS\t14.4\tMovil\n%D0%9A%D0%B0%D1%80%D1%82%D1%8B/2684.36.4.28.3 CFNetwork/1335.0.3.1 Darwin/21.6.0\tiOS\t15.6\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 16_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 (5318439424)\tiOS\t16.4.1\tMovil\ncom.apple.invitation-registration [iPhone OS,16.3,20D47,iPhone12,1]\tiOS\t16.3\tMovil\nRiseofKingdoms/1.0.6816 (iPhone; iOS 16.3; Scale/3.00)\tiOS\t16.3\tMovil\nGlobalPax/7.3.28 (iPhone; iOS 15.7; Scale/3.00)\tiOS\t15.7\tMovil\n365Scores/5.8.13(iOS/16.4.1 iPhone12,3) DeviceID: 46340E93-3B2A-4F74-B024-867ED70EB35C\tiOS\t16.4.1\tMovil\nGrability/121899 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\nMostaza/49 CFNetwork/1220.1 Darwin/20.3.0\tiOS\t14.4\tMovil\nTwitter/9.34.6 CFNetwork/1333.0.4 Darwin/21.5.0\tiOS\t15.5\tMovil\nLas Tipas/2.16.23 (com.nexosoluciones.CinexoCorp.LasTipas; build:1; iOS 16.5.0) Alamofire/5.1.0\tiOS\t16.5.0\tDispositivo con pantalla tactil\nGlobalPax/7.3.48 (iPhone; iOS 15.7.3; Scale/3.00)\tiOS\t15.7.3\tMovil\nJKHealthAssistant/3.4.30 (iPhone; iOS 16.4.1; Scale/2.00)\tiOS\t16.4.1\tMovil\nmoto/8.3.1 (iPhone; iOS 15.3.1; Scale/2.00)\tiOS\t15.3.1\tMovil\n365Scores/5.8.14(iOS/16.4.1 iPhone13,4) DeviceID: B618149A-7B9D-443E-8C7A-2179B77472AE\tiOS\t16.4.1\tMovil\nserver-bag [iPhone OS,14.5.1,18E212,iPhone9,1]\tiOS\t14.5.1\tMovil\nTuneIn Radio/25.5.1; iPhone13,2; iOS/16.5\tiOS\t16.5\tMovil\nAmerigoFree/890 CFNetwork/1240.0.4 Darwin/20.6.0\tiOS\t14.8\tMovil\nCANDY_BOMB_FEVER-mobile/2.5.5051 (iPhone; iOS 16.4.1; Scale/3.00)\tiOS\t16.4.1\tMovil\nB612/12.1.5.4 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 14_2 like Mac OS X) AppleWebKit/537.36 (KHTML, like Gecko) Version/12.1.35 Mobile/YOYZP1 Safa\tiOS\t14.2\tMovil\nglobal/606 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\n365Scores/5.8.14(iOS/16.4.1 iPhone12,1) DeviceID: 95492E1A-979A-4CE7-98AE-F7DEA04F07EC\tiOS\t16.4.1\tMovil\nXiaoMoZB/5.7.2 (iPhone; iOS 14.8.1; Scale/3.00)\tiOS\t14.8.1\tMovil\nMostaza/2.1.5 (com.mostaza; build:49; iOS 15.7.0) Alamofire/2.1.5\tiOS\t15.7.0\tDispositivo con pantalla tactil\nAweme 24.4.0 rv:244020 (iPhone; iOS 16.0.2; zh-Hans_ET) Cronet\tiOS\t16.0.2\tMovil\n365Scores/5.8.13(iOS/16.4.1 iPhone10,2) DeviceID: B6399883-01F3-48B5-A751-7F0DDCD0D5C6\tiOS\t16.4.1\tMovil\nNewsLite 9.2.1 rv:9.2.1.20 (iPhone; iOS 16.5; zh_CN) Cronet\tiOS\t16.5\tMovil\nProgressHandler.system (unknown version) CFNetwork/978.6 Darwin/18.7.0 (x86_64)\tiOS\t12.4\tDispositivo con pantalla tactil\n365Scores/5.8.14(iOS/16.0 iPhone14,5) DeviceID: E35530E4-E214-44FC-90B7-DDB8249D177C\tiOS\t16.0\tMovil\nMagicTiles3/2305101722 CFNetwork/1220.1 Darwin/20.3.0\tiOS\t14.4\tMovil\nheyduggeetinselbadgeapp/80 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\nting_v9.1.33_c5(CFNetwork, iOS 16.5, iPhone11,6)\tiOS\t16.5\tMovil\n365Scores/5.8.13(iOS/16.4.1 iPhone12,8) DeviceID: 7286BBB0-3E21-4A90-A99E-88A1B907ACF9\tiOS\t16.4.1\tMovil\n365Scores/5.8.13(iOS/16.3.1 iPhone11,8) DeviceID: 49137DB4-FCDF-4D47-B118-7DA638D873C1\tiOS\t16.3.1\tMovil\n365Scores/5.8.14(iOS/16.1.1 iPhone12,1) DeviceID: EEA61AAB-20C4-4508-9CF4-5855BD3DF7B2\tiOS\t16.1.1\tMovil\nSmartWristband/2.3 (iPhone; iOS 16.1.2; Scale/2.00)\tiOS\t16.1.2\tMovil\nTuneIn Radio/25.0.0; iPhone13,2; iOS/16.4.1\tiOS\t16.4.1\tMovil\nHikConnect/20230515 CFNetwork/1240.0.4 Darwin/20.5.0\tiOS\t14.6\tMovil\nserver-bag [iPhone OS,15.1,19B74,iPad5,4]\tiOS\t15.1\tTablet\nBAND/10.2.1 (iOS 16.1.1; iPhone14,4)\tiOS\t16.1.1\tMovil\nCabifyRider/8.60.0 (iPhone; iOS 15.6.1; Scale/2.00)\tiOS\t15.6.1\tMovil\n365Scores/5.8.14(iOS/15.6 iPhone13,4) DeviceID: 5BE54023-8A7D-46E6-A32F-9551DFD46825\tiOS\t15.6\tMovil\ndiscover/7.86 (iPhone; iOS 16.0; Scale/3.00)\tiOS\t16.0\tMovil\n365Scores/5.8.14(iOS/16.4.1 iPhone13,1) DeviceID: 8117C64A-CCA5-41ED-8CB8-662DF283EDA1\tiOS\t16.4.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 16_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) FusionKit/1.2.14 didi.passenger.\tiOS\t16.5\tMovil\nTuneIn Radio/25.3.0; iPhone11,2; iOS/16.4.1\tiOS\t16.4.1\tMovil\nAppleCoreMedia/1.0.0.19E258 (iPhone; U; CPU OS 15_4_1 like Mac OS X; es_xl)\tiOS\t15.4.1\tMovil\n365Scores/5.8.13(iOS/16.1.1 iPhone12,5) DeviceID: 7629412B-EB38-4F8A-B2B3-CCB88A3A98C4\tiOS\t16.1.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 15_7_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 SP-engine/2.70.0\tiOS\t15.7.3\tMovil\nMercadoPago/2.272.3.0 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\n365Scores/5.8.13(iOS/16.4.1 iPhone10,3) DeviceID: 9B4747EF-0C23-4372-8259-9509233D3741\tiOS\t16.4.1\tMovil\n365Scores/5.8.13(iOS/16.4.1 iPhone11,8) DeviceID: 6B23F829-4C5A-43E4-A2A3-18AADB9BDD53\tiOS\t16.4.1\tMovil\nLeChangeOverseas/6.3.0 (iPhone; iOS 16.4.1; Scale/2.00)\tiOS\t16.4.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 15_3 like Mac OS X) AppleWebKit/603.1.3 (KHTML, like Gecko) Version/14.7 Mobile/4E0BIP Safari\tiOS\t15.3\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/600.1.22 (KHTML, like Gecko) Version/13.7 Mobile/FMN24W Safar\tiOS\t14.4\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 13_5 like Mac OS X) AppleWebKit/600.7.23 (KHTML, like Gecko) Version/11.5.90 Mobile/G3P8OF Sa\tiOS\t13.5\tMovil\nHikConnect/20230508 CFNetwork/1327.0.4 Darwin/21.2.0\tiOS\t15.2\tMovil\nZOSI VIEW/1.5.0 (iPhone; iOS 16.4.1; Scale/3.00)\tiOS\t16.4.1\tMovil\nQiFit/1.1.7 (iPhone; iOS 16.0; Scale/3.00)\tiOS\t16.0\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 16_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) GSA/76.0.253539693 Mobile/ Saf\tiOS\t16.4.1\tMovil\nClarin/3.0.1 (iPhone; iOS 13.3; Scale/3.00)\tiOS\t13.3\tMovil\nRiseofKingdoms/1.0.6816 (iPhone; iOS 16.2; Scale/2.00)\tiOS\t16.2\tMovil\nTapatalkFree/8.10.27 (iPhone; iOS 15.7.5; Scale/3.00)\tiOS\t15.7.5\tMovil\nNoticeExtention/9.8.61.0.5 CFNetwork/1312 Darwin/21.0.0\tiOS\t15.0\tMovil\nEverLens/2.12.13 (bundle:com.glority.everlens; build:1436152; OS version: iOS 16.3.1; USER_TYPE: 3; COUNTRY_CODE: AR;) Alamofire\tiOS\t16.3.1\tDispositivo con pantalla tactil\n365Scores/5.8.13(iOS/16.4.1 iPhone12,1) DeviceID: F1BACE9F-A19C-4780-A020-D955D72FBED2\tiOS\t16.4.1\tMovil\nTigre/1.1.5 (ar.com.nec.mobile.ccs.gbv.cot; build:4; iOS 16.4.1) Alamofire/4.9.0\tiOS\t16.4.1\tDispositivo con pantalla tactil\ndiscover/7.85.2 (iPhone; iOS 15.2.1; Scale/3.00) Resolution/1284*2778 Version/7.85.2 Build/7852004 Device/(Apple Inc.;iPhone14,3\tiOS\t15.2.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 14_1 like Mac OS X) AppleWebKit/562.30.6 (KHTML, like Gecko) Version/14.0 Mobile/0F63B8 Safar\tiOS\t14.1\tMovil\n365Scores/5.8.13(iOS/16.1.1 iPhone12,1) DeviceID: 78AC4271-F720-47BF-9525-9DF3449FAAA2\tiOS\t16.1.1\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 13_1 like Mac OS X) AppleWebKit/600.7.14 (KHTML, like Gecko) Version/10.4.81 Mobile/QB3SU6 Sa\tiOS\t13.1\tMovil\nMy Cooking/12.7.5051 (iPhone; iOS 16.5; Scale/2.00)\tiOS\t16.5\tMovil\nivooxNew/4.3 (iPhone; iOS 14.2; Scale/2.00)\tiOS\t14.2\tMovil\niPhone8,1/11.1.2 (15B202)\tiOS\t11.1.2\tMovil\n365Scores/5.8.13(iOS/15.7.5 iPhone9,1) DeviceID: AEBAA63D-BC25-424B-9D98-5E28C2E0C637\tiOS\t15.7.5\tMovil\n365Scores/5.8.14(iOS/16.4.1 iPhone15,3) DeviceID: 10DF4790-133E-40BB-A197-A4D679944B71\tiOS\t16.4.1\tMovil\n365Scores/5.8.14(iOS/16.4.1 iPhone10,1) DeviceID: 7D94CB32-0236-408F-88C3-A87EF118BFC6\tiOS\t16.4.1\tMovil\n365Scores/5.8.14(iOS/16.1.2 iPhone12,1) DeviceID: 34CF4BDF-881A-4300-BF8F-C3FD98044EDB\tiOS\t16.1.2\tMovil\nAmericanas/4.198 (iPhone; iOS 16.4.1; Scale/3.00)\tiOS\t16.4.1\tMovil\nGlobalPax/7.3.48 (iPhone; iOS 16.1.2; Scale/3.00)\tiOS\t16.1.2\tMovil\n365Scores/5.8.14(iOS/16.4.1 iPhone12,1) DeviceID: D722C92A-A46D-4349-8D20-AFA384D9032C\tiOS\t16.4.1\tMovil\nGlobalPax/7.3.72 (iPhone; iOS 15.1; Scale/3.00)\tiOS\t15.1\tMovil\ncom.apple.invitation-registration [iPhone OS,16.0.3,20A392,iPhone10,4]\tiOS\t16.0.3\tMovil\nMozilla/5.0 (iPhone; CPU iPhone OS 16_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 (4681044992)\tiOS\t16.4.1\tMovil\nMEV/1.2.1 CFNetwork/1333.0.4 Darwin/21.5.0\tiOS\t15.5\tMovil\nRadioPro/1.9.0 (iPhone; iOS 16.1.2; Scale/3.00)\tiOS\t16.1.2\tMovil\nDreame/4.6.0 (iPhone; iOS 16.1.2; Scale/3.00)\tiOS\t16.1.2\tMovil\nKwai/501729 CFNetwork/1335.0.3.1 Darwin/21.6.0\tiOS\t15.6\tMovil\nParallax/50010101 CFNetwork/1335.0.3 Darwin/21.6.0\tiOS\t15.6\tMovil\n"
          },
          {
            "type": "HTML",
            "data": "<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><strong>Output is truncated</strong> to 200 rows. Learn more about <strong>common.max_count</strong></div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1684166309756_816168569",
      "id": "20230515-125829_1872905454",
      "dateCreated": "2023-05-15T12:58:29-0300",
      "dateStarted": "2023-07-20T11:52:41-0300",
      "dateFinished": "2023-07-20T11:53:10-0300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:62"
    },
    {
      "text": "%jdbc(hive)\ndrop table sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter2;\ncreate table sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter2 stored as orc as \n\nselect * from sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter a\nwhere version_parser_num is not null and version_parser_num !='' and version_parser_os = 'iOS'\nand CAST(SUBSTRING_INDEX(version_parser_num, '.', 1) AS int) < 17\nunion all\nselect * from sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter a\nwhere version_parser_num is not null and version_parser_num !='' and version_parser_os = 'Android'\nand CAST(SUBSTRING_INDEX(version_parser_num, '.', 1) AS int) < 15\n-- union all\n-- select * from sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter a\n-- where version_parser_os not in ('Android','iOS')\n;",
      "user": "jpinelli",
      "dateUpdated": "2023-07-20T15:48:39-0300",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/sql",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 580512"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1684174942685_-1028917335",
      "id": "20230515-152222_2055128086",
      "dateCreated": "2023-05-15T15:22:22-0300",
      "dateStarted": "2023-07-20T15:48:39-0300",
      "dateFinished": "2023-07-20T15:49:11-0300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:63"
    },
    {
      "text": "%jdbc(hive)\n\ndrop table sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter3;\ncreate table sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter3 stored as orc as \n\nselect user_agent, version_parser_os, version_parser_num\nfrom sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter \nwhere version_parser_num not in (select version_parser_num from sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter a where a.version_parser_os = 'Android' and a.version_parser_num > 14)\nand dev_type='Movil'\n;\n\n",
      "user": "jpinelli",
      "dateUpdated": "2023-06-13T13:25:13-0300",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          },
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 306083"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1684257070432_2035182363",
      "id": "20230516-141110_1236880245",
      "dateCreated": "2023-05-16T14:11:10-0300",
      "dateStarted": "2023-06-13T13:25:13-0300",
      "dateFinished": "2023-06-13T13:25:56-0300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:64"
    },
    {
      "text": "%jdbc(hive)\ndrop table sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter5;\n\n",
      "user": "jpinelli",
      "dateUpdated": "2023-05-23T15:59:24-0300",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1684862384820_-875365050",
      "id": "20230523-141944_2097728825",
      "dateCreated": "2023-05-23T14:19:44-0300",
      "dateStarted": "2023-05-23T15:59:24-0300",
      "dateFinished": "2023-05-23T15:59:25-0300",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:65"
    },
    {
      "text": "%spark.pyspark\nfrom user_agents import parse\nfrom pyspark.sql.functions import udf, lit\nfrom pyspark.sql.types import BooleanType\n\n# Definir funciÃ³n tipo_dispositivo\ndef categorize_device(user_agent):\n    try:\n        ua = parse(user_agent)\n        if ua.is_mobile:\n            return 'Movil'\n        elif ua.is_tablet:\n            return 'Tablet'\n        elif ua.is_pc:\n            return 'PC'\n        elif ua.is_bot:\n            return 'Bot'\n        elif ua.is_touch_capable:\n            return 'Dispositivo con pantalla tactil'\n        else:\n            return 'Otros'\n    except:\n        return 'Error al parsear el user agent'\n\n\ndef parse_user_agent(user_agent):\n    try:\n        ua = parse(user_agent)\n        return ua.os.family\n    except:\n        return None\n\n# Definir funciÃ³n de parsing\ndef parse_user_agent2(user_agent):\n    try:\n        ua = parse(user_agent)\n        return ua.os.version_string\n    except:\n        return None\n\n# Registrar funciÃ³n de parsing como UDF\nparse_user_agent_udf = udf(parse_user_agent)\nparse_user_agent_udf2 = udf(parse_user_agent2)\ncategorize_device_udf = udf(categorize_device)\nfechas=range(20230501,20230532)\n\nfor fechas in fechas:\n# Crear DataFrame a partir de la tabla\n    df5 = spark.sql(\"SELECT msisdn, SUBSTR(imei, 1, 8) AS tac, fecha, user_agent from trafico.huawei_dpi_consolidado where fecha ={0} AND msisdn IN (SELECT ani FROM sandbox_datascientist.jfp_equipos_actualizables_05) AND SUBSTR(imsi, 1, 3) = '722' and user_agent is not null and user_agent <>'' and user_agent <>'0'\".format(fechas))\n    df5.show()\n    # # Agregar columna 'version_parser_OS' y 'version_parser_num' que contiene la versiÃ³n del sistema operativo extraÃ­da del user_agent\n    df5 = df5.withColumn('version_parser_OS', parse_user_agent_udf(df5.user_agent))\n    df5 = df5.withColumn('version_parser_num', parse_user_agent_udf2(df5.user_agent))\n    # # Agregar columna 'es_celu' que contiene un booleano indicando si el dispositivo es un mÃ³vil\n    df5 = df5.withColumn('dev_type', categorize_device_udf(df5.user_agent))\n    df5_filtrado = df5.filter(\n        ((df5['version_parser_os'] == 'iOS') & (df5['version_parser_num'].cast('int') < 17)) |\n        ((df5['version_parser_os'] == 'Android') & (df5['version_parser_num'].cast('int') < 15)) |\n        ((df5['version_parser_os'] != 'iOS') & (df5['version_parser_os'] != 'Android'))\n    )\n    df5_filtrado.show()\n    df5.write.format(\"orc\").mode(\"append\").insertInto(\"sandbox_datascientist.jfp_equipos_actualizables_user_agent_inter_20230714\")\n\n\n",
      "user": "jpinelli",
      "dateUpdated": "2023-07-14T11:41:24-0300",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "An error occurred while calling o387.showString.\n: org.apache.spark.SparkException: Job aborted due to stage failure: Task 562 in stage 17.0 failed 4 times, most recent failure: Lost task 562.3 in stage 17.0 (TID 165014, aphdpdnp78.tmoviles.com.ar, executor 2577): org.apache.spark.api.python.PythonException: Traceback (most recent call last):\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 366, in main\n    func, profiler, deserializer, serializer = read_udfs(pickleSer, infile, eval_type)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 241, in read_udfs\n    arg_offsets, udf = read_single_udf(pickleSer, infile, eval_type, runner_conf)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 168, in read_single_udf\n    f, return_type = read_command(pickleSer, infile)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 69, in read_command\n    command = serializer._read_with_length(file)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/serializers.py\", line 173, in _read_with_length\n    return self.loads(obj)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/serializers.py\", line 590, in loads\n    return pickle.loads(obj)\nImportError: No module named user_agents.parsers\n\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:458)\n\tat org.apache.spark.sql.execution.python.PythonUDFRunner$$anon$1.read(PythonUDFRunner.scala:81)\n\tat org.apache.spark.sql.execution.python.PythonUDFRunner$$anon$1.read(PythonUDFRunner.scala:64)\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:412)\n\tat org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:462)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:125)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:55)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:123)\n\tat org.apache.spark.executor.Executor$TaskRunner$$anonfun$11.apply(Executor.scala:413)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1334)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:419)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n\nDriver stacktrace:\n\tat org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1928)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1916)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1915)\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n\tat org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1915)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:951)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:951)\n\tat scala.Option.foreach(Option.scala:257)\n\tat org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:951)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2149)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2098)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2087)\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)\n\tat org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:762)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2079)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2100)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2119)\n\tat org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:375)\n\tat org.apache.spark.sql.execution.CollectLimitExec.executeCollect(limit.scala:38)\n\tat org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$collectFromPlan(Dataset.scala:3388)\n\tat org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2550)\n\tat org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2550)\n\tat org.apache.spark.sql.Dataset$$anonfun$53.apply(Dataset.scala:3369)\n\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\n\tat org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withAction(Dataset.scala:3368)\n\tat org.apache.spark.sql.Dataset.head(Dataset.scala:2550)\n\tat org.apache.spark.sql.Dataset.take(Dataset.scala:2764)\n\tat org.apache.spark.sql.Dataset.getRows(Dataset.scala:254)\n\tat org.apache.spark.sql.Dataset.showString(Dataset.scala:291)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.spark.api.python.PythonException: Traceback (most recent call last):\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 366, in main\n    func, profiler, deserializer, serializer = read_udfs(pickleSer, infile, eval_type)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 241, in read_udfs\n    arg_offsets, udf = read_single_udf(pickleSer, infile, eval_type, runner_conf)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 168, in read_single_udf\n    f, return_type = read_command(pickleSer, infile)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 69, in read_command\n    command = serializer._read_with_length(file)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/serializers.py\", line 173, in _read_with_length\n    return self.loads(obj)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/serializers.py\", line 590, in loads\n    return pickle.loads(obj)\nImportError: No module named user_agents.parsers\n\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:458)\n\tat org.apache.spark.sql.execution.python.PythonUDFRunner$$anon$1.read(PythonUDFRunner.scala:81)\n\tat org.apache.spark.sql.execution.python.PythonUDFRunner$$anon$1.read(PythonUDFRunner.scala:64)\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:412)\n\tat org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:462)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:125)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:55)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:123)\n\tat org.apache.spark.executor.Executor$TaskRunner$$anonfun$11.apply(Executor.scala:413)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1334)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:419)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\t... 1 more\nTraceback (most recent call last):\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/sql/dataframe.py\", line 381, in show\n    print(self._jdf.showString(n, 20, vertical))\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py\", line 1257, in __call__\n    answer, self.gateway_client, self.target_id, self.name)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py\", line 63, in deco\n    return f(*a, **kw)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/py4j-0.10.7-src.zip/py4j/protocol.py\", line 328, in get_return_value\n    format(target_id, \".\", name), value)\nPy4JJavaError: An error occurred while calling o387.showString.\n: org.apache.spark.SparkException: Job aborted due to stage failure: Task 562 in stage 17.0 failed 4 times, most recent failure: Lost task 562.3 in stage 17.0 (TID 165014, aphdpdnp78.tmoviles.com.ar, executor 2577): org.apache.spark.api.python.PythonException: Traceback (most recent call last):\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 366, in main\n    func, profiler, deserializer, serializer = read_udfs(pickleSer, infile, eval_type)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 241, in read_udfs\n    arg_offsets, udf = read_single_udf(pickleSer, infile, eval_type, runner_conf)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 168, in read_single_udf\n    f, return_type = read_command(pickleSer, infile)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 69, in read_command\n    command = serializer._read_with_length(file)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/serializers.py\", line 173, in _read_with_length\n    return self.loads(obj)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/serializers.py\", line 590, in loads\n    return pickle.loads(obj)\nImportError: No module named user_agents.parsers\n\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:458)\n\tat org.apache.spark.sql.execution.python.PythonUDFRunner$$anon$1.read(PythonUDFRunner.scala:81)\n\tat org.apache.spark.sql.execution.python.PythonUDFRunner$$anon$1.read(PythonUDFRunner.scala:64)\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:412)\n\tat org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:462)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:125)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:55)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:123)\n\tat org.apache.spark.executor.Executor$TaskRunner$$anonfun$11.apply(Executor.scala:413)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1334)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:419)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n\nDriver stacktrace:\n\tat org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1928)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1916)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1915)\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n\tat org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1915)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:951)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:951)\n\tat scala.Option.foreach(Option.scala:257)\n\tat org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:951)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2149)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2098)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2087)\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)\n\tat org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:762)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2079)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2100)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2119)\n\tat org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:375)\n\tat org.apache.spark.sql.execution.CollectLimitExec.executeCollect(limit.scala:38)\n\tat org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$collectFromPlan(Dataset.scala:3388)\n\tat org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2550)\n\tat org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2550)\n\tat org.apache.spark.sql.Dataset$$anonfun$53.apply(Dataset.scala:3369)\n\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\n\tat org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withAction(Dataset.scala:3368)\n\tat org.apache.spark.sql.Dataset.head(Dataset.scala:2550)\n\tat org.apache.spark.sql.Dataset.take(Dataset.scala:2764)\n\tat org.apache.spark.sql.Dataset.getRows(Dataset.scala:254)\n\tat org.apache.spark.sql.Dataset.showString(Dataset.scala:291)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.spark.api.python.PythonException: Traceback (most recent call last):\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 366, in main\n    func, profiler, deserializer, serializer = read_udfs(pickleSer, infile, eval_type)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 241, in read_udfs\n    arg_offsets, udf = read_single_udf(pickleSer, infile, eval_type, runner_conf)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 168, in read_single_udf\n    f, return_type = read_command(pickleSer, infile)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/worker.py\", line 69, in read_command\n    command = serializer._read_with_length(file)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/serializers.py\", line 173, in _read_with_length\n    return self.loads(obj)\n  File \"/opt/cloudera/parcels/CDH-7.1.7-1.cdh7.1.7.p1000.24102687/lib/spark/python/lib/pyspark.zip/pyspark/serializers.py\", line 590, in loads\n    return pickle.loads(obj)\nImportError: No module named user_agents.parsers\n\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:458)\n\tat org.apache.spark.sql.execution.python.PythonUDFRunner$$anon$1.read(PythonUDFRunner.scala:81)\n\tat org.apache.spark.sql.execution.python.PythonUDFRunner$$anon$1.read(PythonUDFRunner.scala:64)\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:412)\n\tat org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:462)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:125)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:55)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:123)\n\tat org.apache.spark.executor.Executor$TaskRunner$$anonfun$11.apply(Executor.scala:413)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1334)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:419)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\t... 1 more\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1689274690659_1517713360",
      "id": "20230713-155810_1298941681",
      "dateCreated": "2023-07-13T15:58:10-0300",
      "dateStarted": "2023-07-14T11:41:24-0300",
      "dateFinished": "2023-07-14T11:42:28-0300",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:67"
    }
  ],
  "name": "JPinelli/TERM/Identificacion_SO",
  "id": "2H6FSX469",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "livy2:shared_process": [],
    "jdbc:shared_process": [],
    "spark2:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}
